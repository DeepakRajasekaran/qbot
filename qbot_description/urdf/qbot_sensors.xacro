<?xml version="1.0"?>
<robot name="qbot" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- Sensor Links -->

    <link name="lidar">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 ${-lidar_height}"/>
            <geometry>
                <box size="${lidar_radius * 2.2} ${lidar_radius * 2.2} ${lidar_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="${lidar_mass}" r="${lidar_radius}" h="${lidar_height}" 
                                xyz="0 0 0" rpy="0 0 0" />
    </link>

    <link name="imu">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${imu_length} ${imu_width} ${imu_height}"/>
            </geometry>
            <material name="green"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${imu_length} ${imu_width} ${imu_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertia m="${imu_mass}" l="${imu_length}" w="${imu_width}" h="${imu_height}" 
                           xyz="0 0 0" rpy="0 0 0" />
    </link>

    <link name="camera">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${camera_length} ${camera_width} ${camera_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertia m="${camera_mass}" l="${camera_length}" w="${camera_width}" h="${camera_height}" 
                            xyz="0 0 0" rpy="0 0 0" />

    </link>

    <link name="camera_optical" />

    <!-- Sensor Joints -->
    <joint name="lidar_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 ${lidar_offset_z}"/>
        <parent link="base_link"/>
        <child link="lidar"/>
    </joint>

    <joint name="imu_joint" type="fixed">
        <origin rpy="0 0 0" xyz="${imu_offset_x} 0 ${imu_offset_z}"/>
        <parent link="base_link"/>
        <child link="imu"/>
    </joint>

    <joint name="camera_joint" type="fixed">
        <origin rpy="0 0 0" xyz="${camera_offset_x} 0 ${camera_offset_z}"/>
        <parent link="base_link"/>
        <child link="camera"/>
    </joint>
    
    <joint name="camera_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
        <parent link="camera"/>
        <child link="camera_optical"/>
    </joint>

    <gazebo reference="camera">
        <sensor name="camera" type="camera">
            <camera>
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>15</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
                <optical_frame_id>camera_optical</optical_frame_id>
                <camera_info_topic>camera/camera_info</camera_info_topic>
            </camera>
            <always_on>1</always_on>
            <update_rate>20</update_rate>
            <visualize>true</visualize>
            <topic>camera/image_raw</topic>            
        </sensor>
    </gazebo>


    </robot>